#jinja2: lstrip_blocks: True
global
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    log {{ syslog_server }}:{{ syslog_udp_port }} {{ syslog_haproxy_facility }}
    maxconn {{ haproxy_max_connections }}
    nbproc {{ haproxy_processes }}
    {% if haproxy_processes > 1 and haproxy_process_cpu_map | bool %}
        {% for cpu_idx in range(0, haproxy_processes) %}
    cpu-map {{ cpu_idx + 1 }} {{ cpu_idx }}
        {% endfor %}
    {% endif %}
    stats socket /var/lib/kolla/haproxy/haproxy.sock group kolla mode 660
    {% if kolla_enable_tls_external | bool or kolla_enable_tls_internal | bool %}
    ssl-default-bind-ciphers DEFAULT:!MEDIUM:!3DES
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 4096
    {% endif %}

defaults
    log global
    option redispatch
    retries 3
    timeout http-request {{ haproxy_http_request_timeout }}
    timeout queue {{ haproxy_queue_timeout }}
    timeout connect {{ haproxy_connect_timeout }}
    timeout client {{ haproxy_client_timeout }}
    timeout server {{ haproxy_server_timeout }}
    timeout check {{ haproxy_check_timeout }}
    balance {{ haproxy_defaults_balance }}
    maxconn {{ haproxy_defaults_max_connections }}

listen stats
   bind {{ api_interface_address }}:{{ haproxy_stats_port }}
   mode http
   stats enable
   stats uri /
   stats refresh 15s
   stats realm Haproxy\ Stats
   stats auth {{ haproxy_user }}:{{ haproxy_password }}

frontend status
    bind {{ api_interface_address }}:{{ haproxy_monitor_port }}
    {% if api_interface_address != kolla_internal_vip_address %}
    bind {{ kolla_internal_vip_address }}:{{ haproxy_monitor_port }}
    {% endif %}
    mode http
    monitor-uri /

{% if not enable_prometheus_server | bool and groups['prometheus_server'] is defined and groups['prometheus_server']|length > 0 %}

userlist prometheus-server-user
  user {{ prometheus_server_user }} insecure-password {{ prometheus_server_password }}

listen prometheus_server
  mode http
  bind {{ kolla_internal_vip_address }}:{{ prometheus_port }}
  http-request del-header X-Forwarded-Proto if { ssl_fc }
{% for host in groups['prometheus_server'] %}
  server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ prometheus_port }} check inter 2000 rise 2 fall 5 {% if not loop.first %}backup{% endif %}

{% endfor %}
{% if haproxy_enable_external_vip | bool %}

listen prometheus_server_external
  mode http
  bind {{ kolla_external_vip_address }}:{{ prometheus_port }}
  http-request del-header X-Forwarded-Proto
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  acl auth_acl http_auth(prometheus-server-user)
  http-request auth realm basicauth unless auth_acl
{% for host in groups['prometheus_server'] %}
  server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ prometheus_port }} check inter 2000 rise 2 fall 5 {% if not loop.first %}backup{% endif %}

{% endfor %}
{% endif %}
{% endif %}

{% if enable_elastalert | bool and groups['elastalert'] is defined and groups['elastalert']|length > 0 %}
userlist elastalert-user
  user {{ elastalert_user }} insecure-password {{ elastalert_password }}
listen elastalert_external
  mode http
  bind {{ kolla_external_vip_address }}:{{ elastalert_port }}
  http-request del-header X-Forwarded-Proto
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  acl auth_acl http_auth(elastalert-user)
  http-request auth realm basicauth unless auth_acl
{% for host in groups['elastalert'] %}
  server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}:{{ elastalert_port }} check inter 2000 rise 2 fall 5 {% if not loop.first %}backup{% endif %}

{% endfor %}
{% endif %}
