---
- name: Check the /var/log/ceph folder is exists
  stat:
    path: /var/log/ceph/
  register: log_ceph_folder
  when: enable_prometheus_external_ceph_mgr_exporter | bool

- name: Check if a dmesg nohup process is running
  command: pgrep dmesg
  register: dmesg_nohup_status
  ignore_errors: yes
  changed_when: false
  when: collect_dmesg | bool

- name: Create a nohup process for dmesg if not exist
  become: true
  shell: nohup dmesg -l err,crit,alert,emerg --follow -T > /var/log/dmesg &
  when: 
  - collect_dmesg | bool
  - dmesg_nohup_status.rc != 0

- name: Rerun dmesg after reboot
  become: true
  cron:
    name: "Run dmesg after reboot"
    user: "root"
    special_time: reboot
    job: "/usr/bin/nohup /usr/bin/dmesg -l err,crit,alert,emerg --follow -T &> /var/log/dmesg &"

- name: Change permission for dmesg
  become: true
  file:
    path: /var/log/dmesg
    mode: "0644"

- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  become: true
  with_items:
    - "kolla-toolbox"
    - "cron"
    - "cron/logrotate"
    - "cron/host_cron"

- name: Ensuring fluentd config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item }}"
    state: "directory"
    mode: "0770"
    recurse: yes
  become: true
  with_items:
    - "fluentd"
    - "fluentd/input"
    - "fluentd/output"
    - "fluentd/format"
    - "fluentd/filter"
  when: enable_fluentd | bool

- name: Set bashrc path
  set_fact:
    bashrc_path: "{% if ansible_os_family == 'RedHat' %}/etc/bashrc{% elif ansible_os_family == 'Debian' %}/etc/bash.bashrc{% endif %}"

- name: Export custom PROMPT_COMMAND
  lineinfile:
    path: "{{ bashrc_path }}"
    line: "export PROMPT_COMMAND='RETRN_VAL=$?;logger -p local6.debug \"[cmdlog] $(whoami) [$$]: $(history 1 | sed \"s/^[ ]*[0-9]\\+[ ]*//\" ) [$RETRN_VAL] [$(echo $SSH_CLIENT | cut -d\" \" -f1)]\"'"
    owner: "root"
    group: "root"
    mode: "0644"
  become: True
  when: enable_fluentd_syslog_history | bool

- name: Source bashrc
  shell: source {{ bashrc_path }}
  args:
    executable: /bin/bash

- name: Copying rsyslog config
  template:
    src: "rsyslog.conf.j2"
    dest: "/etc/rsyslog.conf"
    mode: "0644"
  become: true
  when:
    - enable_fluentd | bool

- name: Restart rsyslog service
  systemd:
    state: restarted
    name: rsyslog

- name: Create cmdlog.log file
  copy:
    content: ""
    dest: "/var/log/cmdlog.log"
    force: "no"
    owner: "root"
    group: "root"
    mode: "0600"
  become: true
  when:
    - enable_fluentd | bool
    - enable_fluentd_syslog_history | bool

- name: Fetch fluentd image labels
  vars:
    service_name: "fluentd"
    service: "{{ common_services[service_name] }}"
  become: true
  docker_image_facts:
    name: "{{ service.image }}"
  register: fluentd_labels
  when: enable_fluentd | bool

- name: Set fluentd facts
  set_fact:
    fluentd_binary: "{% if fluentd_labels.images.0.ContainerConfig.Labels.fluentd_binary is not defined %}{% if kolla_base_distro in 'ubuntu' and ansible_architecture == 'x86_64' %}td-agent{% else %}fluentd{% endif %}{% else %}{{ fluentd_labels.images.0.ContainerConfig.Labels.fluentd_binary }}{% endif %}"
  when: enable_fluentd | bool

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  become: true
  when: item.value.enabled | bool
  with_dict: "{{ common_services }}"
  register: common_config_jsons
  notify:
    - "Restart {{ item.key }} container"

- name: Find custom fluentd input config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/input"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_inputs
  when:
    - enable_fluentd | bool

- name: Copying over fluentd input config files
  vars:
    customised_input_files: "{{ find_custom_fluentd_inputs.files | map(attribute='path') | map('basename') | list }}"
  template:
    src: "conf/input/{{ item }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/input/{{ item }}.conf"
    mode: "0660"
  become: true
  when:
    - enable_fluentd | bool
    - item ~ '.conf' not in customised_input_files
  with_items:
    - "00-global"
    - "01-syslog"
    - "02-mariadb"
    - "03-rabbitmq"
    - "04-openstack-wsgi"
    - "05-libvirt"
    - "06-zookeeper"
    - "07-kafka"
  notify:
    - Restart fluentd container

- name: Copying over fluentd ceph input config file
  template:
    src: "conf/input/08-ceph.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/input/08-ceph.conf"
    mode: "0660"
  become: true
  register: fluentd_input_ceph
  when:
    - log_ceph_folder is defined 
    - log_ceph_folder.stat.exists | bool
  ignore_errors: yes

- name: Copying over fluentd dmesg input config file
  template:
    src: "conf/input/10-dmesg.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/input/10-dmesg.conf"
    mode: "0660"
  become: true
  register: fluentd_input_dmesg
  when: collect_dmesg | bool
  notify:
    - Restart fluentd container

- name: Find custom fluentd input config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/input"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_inputs
  when:
    - enable_fluentd | bool

- name: Copying over custom fluentd input config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/input/{{ item.path | basename }}"
  register: fluentd_input_custom
  when:
    - enable_fluentd | bool
  with_items: "{{ find_custom_fluentd_inputs.files }}"
  notify:
    - Restart fluentd container

- name: Copying over fluentd output config files
  template:
    src: "conf/output/{{ item.name }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/output/{{ item.name }}.conf"
    mode: "0660"
  become: true
  register: fluentd_output
  when:
    - enable_fluentd | bool
    - item.enabled | bool
  with_items:
    - name: "00-local"
      enabled: true
    - name: "00-syslog"
      enabled: true
    - name: "01-es-ceph"
      enabled: "{{ (enable_elasticsearch | bool or
                ( elasticsearch_address != kolla_internal_vip_address )) and
                (log_ceph_folder is defined and log_ceph_folder.stat.exists | bool) }}"
    - name: "02-es"
      enabled: "{{ enable_elasticsearch | bool or
                ( elasticsearch_address != kolla_internal_vip_address ) }}"
  notify:
    - Restart fluentd container

- name: Copying over fluentd dmesg output config files
  template:
    src: "conf/output/00-dmesg.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/output/00-dmesg.conf"
    mode: "0660"
  become: true
  register: fluentd_output_dmesg
  when:
    - enable_fluentd | bool
    - collect_dmesg | bool
  notify:
    - Restart fluentd container

- name: Find custom fluentd output config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/output"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_outputs
  when:
    - enable_fluentd | bool

- name: Copying over custom fluentd output config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/output/{{ item.path | basename }}"
    mode: "0660"
  become: true
  register: fluentd_output_custom
  when:
    - enable_fluentd | bool
  with_items: "{{ find_custom_fluentd_outputs.files }}"
  notify:
    - Restart fluentd container

- name: Copying over fluentd format config files
  template:
    src: "conf/format/{{ item }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/format/{{ item }}.conf"
    mode: "0660"
  become: true
  register: fluentd_format
  with_items:
    - "apache_access"
    - "wsgi_access"
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Copying over fluentd filter config files
  template:
    src: "conf/filter/{{ item.src }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/filter/{{ item.dest }}.conf"
    mode: "0660"
  become: true
  register: fluentd_filter
  with_items:
    - src: 00-record_transformer
      dest: 00-record_transformer
    - src: "{{ '01-rewrite-0.14' if kolla_base_distro in ['debian', 'ubuntu'] else '01-rewrite-0.12' }}"
      dest: 01-rewrite
    - src: 02-rewrite-syslog
      dest: 02-rewrite-syslog
    - src: 03-record-transformer-syslog
      dest: 03-record-transformer-syslog
    - src: 04-parser-syslog
      dest: 04-parser-syslog
    - src: 05-record-transformer-parsed-syslog
      dest: 05-record-transformer-parsed-syslog
    - src: 06-record-transformer-add-ip
      dest: 06-record-transformer-add-ip
    - src: 07-drop-warn-fluentd
      dest: 07-drop-warn-fluentd
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Find custom fluentd filter config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/filter"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_filters
  when: enable_fluentd | bool

- name: Copying over custom fluentd filter config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/filter/{{ item.path | basename }}"
    mode: "0660"
  become: true
  register: fluentd_filter_custom
  with_items: "{{ find_custom_fluentd_filters.files }}"
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Copying over td-agent.conf
  template:
    src: "td-agent.conf.j2"
    dest: "{{ node_config_directory }}/{{ item }}/td-agent.conf"
    mode: "0660"
  become: true
  register: fluentd_td_agent
  with_items:
    - "fluentd"
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Copying over cron logrotate config files
  template:
    src: "cron-logrotate-{{ item.name }}.conf.j2"
    dest: "{{ node_config_directory }}/cron/logrotate/{{ item.name }}.conf"
    mode: "0660"
  become: true
  register: cron_confs
  when: item.enabled | bool
  with_items:
    - { name: "ansible", enabled: "yes" }
    - { name: "aodh", enabled: "{{ enable_aodh }}" }
    - { name: "barbican", enabled: "{{ enable_barbican }}" }
    - { name: "blazar", enabled: "{{ enable_blazar }}" }
    - { name: "ceilometer", enabled: "{{ enable_ceilometer }}" }
    - { name: "ceph", enabled: "{{ enable_ceph }}" }
    - { name: "chrony", enabled: "{{ enable_chrony }}" }
    - { name: "cinder", enabled: "{{ enable_cinder }}" }
    - { name: "cloudkitty", enabled: "{{ enable_cloudkitty }}" }
    - { name: "collectd", enabled: "{{ enable_collectd }}" }
    - { name: "congress", enabled: "{{ enable_congress }}" }
    - { name: "cyborg", enabled: "{{ enable_cyborg }}" }
    - { name: "designate", enabled: "{{ enable_designate }}" }
    - { name: "elasticsearch", enabled: "{{ enable_elasticsearch }}" }
    - { name: "etcd", enabled: "{{ enable_etcd }}" }
    - { name: "freezer", enabled: "{{ enable_freezer }}" }
    - { name: "glance", enabled: "{{ enable_glance }}" }
    - { name: "global", enabled: "yes" }
    - { name: "gnocchi", enabled: "{{ enable_gnocchi }}" }
    - { name: "grafana", enabled: "{{ enable_grafana }}" }
    - { name: "haproxy", enabled: "{{ enable_haproxy }}" }
    - { name: "heat", enabled: "{{ enable_heat }}" }
    - { name: "horizon", enabled: "{{ enable_horizon }}" }
    - { name: "influxdb", enabled: "{{ enable_influxdb }}" }
    - { name: "ironic", enabled: "{{ enable_ironic }}" }
    - { name: "ironic-inspector", enabled: "{{ enable_ironic }}" }
    - { name: "iscsid", enabled: "{{ enable_iscsid }}" }
    - { name: "kafka", enabled: "{{ enable_kafka }}" }
    - { name: "karbor", enabled: "{{ enable_karbor }}" }
    - { name: "keepalived", enabled: "{{ enable_haproxy }}" }
    - { name: "keystone", enabled: "{{ enable_keystone }}" }
    - { name: "kibana", enabled: "{{ enable_kibana }}" }
    - { name: "kuryr", enabled: "{{ enable_kuryr }}" }
    - { name: "magnum", enabled: "{{ enable_magnum }}" }
    - { name: "manila", enabled: "{{ enable_manila }}" }
    - { name: "mariadb", enabled: "{{ enable_mariadb }}" }
    - { name: "masakari", enabled: "{{ enable_masakari }}" }
    - { name: "mistral", enabled: "{{ enable_mistral }}" }
    - { name: "monasca", enabled: "{{ enable_monasca }}" }
    - { name: "mongodb", enabled: "{{ enable_mongodb }}" }
    - { name: "murano", enabled: "{{ enable_murano }}" }
    - { name: "neutron", enabled: "{{ enable_neutron }}" }
    - { name: "nova", enabled: "{{ enable_nova }}" }
    - { name: "octavia", enabled: "{{ enable_octavia }}" }
    - { name: "opendaylight", enabled: "{{ enable_opendaylight }}" }
    - { name: "outward-rabbitmq", enabled: "{{ enable_outward_rabbitmq }}" }
    - { name: "panko", enabled: "{{ enable_panko }}" }
    - { name: "qinling", enabled: "{{ enable_qinling }}" }
    - { name: "rabbitmq", enabled: "{{ enable_rabbitmq }}" }
    - { name: "rally", enabled: "{{ enable_rally }}" }
    - { name: "sahara", enabled: "{{ enable_sahara }}" }
    - { name: "searchlight", enabled: "{{ enable_searchlight }}" }
    - { name: "senlin", enabled: "{{ enable_senlin }}" }
    - { name: "skydive", enabled: "{{ enable_skydive }}" }
    - { name: "solum", enabled: "{{ enable_solum }}" }
    - { name: "storm", enabled: "{{ enable_storm }}" }
    - { name: "swift", enabled: "{{ enable_swift }}" }
    - { name: "tacker", enabled: "{{ enable_tacker }}" }
    - { name: "tempest", enabled: "{{ enable_tempest }}" }
    - { name: "trove", enabled: "{{ enable_trove }}" }
    - { name: "vitrage", enabled: "{{ enable_vitrage }}" }
    - { name: "watcher", enabled: "{{ enable_watcher }}" }
    - { name: "zookeeper", enabled: "{{ enable_zookeeper }}" }
    - { name: "zun", enabled: "{{ enable_zun }}" }
  notify:
    - Restart cron container

- name: Ensure RabbitMQ Erlang cookie exists
  become: true
  copy:
    content: "{{ rabbitmq_cluster_cookie }}"
    dest: "{{ node_config_directory }}/kolla-toolbox/rabbitmq-erlang.cookie"
    mode: "0660"
  when: enable_rabbitmq | bool
  notify:
    - Restart kolla-toolbox container

- name: Ensuring config directories have correct owner and permission
  become: true
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - item.value.enabled | bool
    - item.key != "kolla-toolbox"
  with_dict: "{{ common_services }}"

- include_tasks: check-containers.yml
  when: kolla_action != "config"
